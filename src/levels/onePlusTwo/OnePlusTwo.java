/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package levels.onePlusTwo;

import com.sun.opengl.util.Animator;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;

/**
 *
 * @author abraham
 *
 * barras que avanzan hacia el weon drop del timer para la puntuacion tres
 * carriles para elegir personaje se mueve con las flechsa sigo sin estar seguro
 * de como hacerlo: modificar las clases de llamado implementar las clases
 *
 * solo llamar a la clase del personaje, no la del canvas de momento me parece
 * la mejor opcion terminar para el 31
 *
 * switch de acuerdo al resultado para las colisiones tres carriles tres pilares
 * que se acercan al personaje
 *
 * frente al problema de cambiar las operaciones en display pasar la
 * clasemCosaImplemetada aqui desarrollar un frame para cada personaje
 *
 * otra solucion es usar herencia de momento esas son mis soluciones, las
 * implementare mas tarde
 *
 *
 */
public class OnePlusTwo extends javax.swing.JFrame
{

    /**
     * Creates new form OnePlusTwo
     */
    Animator animator1;
    //int[] arr;

    public OnePlusTwo(int personaje)
    {
        initComponents();

//        boolean bool = true;
//        arr = new int[11];
//        do
//        {
//            randomizer();
//            if (arr[arr.length - 1] == 1 || arr[arr.length - 1] == 2 || arr[arr.length - 1] == 3)
//            {
//                bool = false;
//            }
//        } while (bool);


//        switch (personaje)
//        {
//            case 1:
//                canvas1.addGLEventListener(new menu.MenuCanvasKitty());
//                break;
//            case 2:
//                canvas1.addGLEventListener(new menu.CanvasPinky());
//                break;
//            case 3:
//                //canvas1.addGLEventListener(new);
//                
//        }

//        animator1 = new Animator(canvas1);
//        addWindowListener(new WindowAdapter()
//        {
//            @Override
//            public void windowClosing(WindowEvent e)
//            {
//                new Thread(new Runnable()
//                {
//                    public void run()
//                    {
//                        animator1.stop();
//                        System.exit(0);
//                    }
//                }).start();
//            }
//        });
//        animator1.start();
    }

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        canvas1 = new javax.media.opengl.GLCanvas();
        labN = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(canvas1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 800, 450));

        labN.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        getContentPane().add(labN, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 10, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(OnePlusTwo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(OnePlusTwo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(OnePlusTwo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(OnePlusTwo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new OnePlusTwo(3).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    protected javax.media.opengl.GLCanvas canvas1;
    protected javax.swing.JLabel labN;
    // End of variables declaration//GEN-END:variables
}
